/*
 * JS for startScreen generated by Appery.io
 *
 */

Apperyio.getProjectGUID = function() {
    return '12174273-ade0-496d-b436-61183af406d1';
}

function navigateTo(outcome, useAjax) {
    Apperyio.navigateTo(outcome, useAjax);
}

// Deprecated


function adjustContentHeight() {
    Apperyio.adjustContentHeightWithPadding();
}

function adjustContentHeightWithPadding(_page) {
    Apperyio.adjustContentHeightWithPadding(_page);
}

function setDetailContent(pageUrl) {
    Apperyio.setDetailContent(pageUrl);
}

// Appery.io push registration service
var _pushRegistrationApperyService = new Apperyio.RestService({
    'url': 'https://api.appery.io/rest/push/reg',
    'dataType': 'json',
    'type': 'post',
    'contentType': 'application/json',
});

Apperyio.AppPages = [{
    "name": "Waittimes",
    "location": "#Waittimes"
}, {
    "name": "startScreen",
    "location": "#startScreen"
}];

startScreen_js = function(runBeforeShow) { /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'mobilelabel_8': 'startScreen_mobilelabel_8',
        'mobilenavbar_2': 'startScreen_mobilenavbar_2',
        'mobilenavbaritem_3': 'startScreen_mobilenavbaritem_3',
        'mobilenavbaritem_4': 'startScreen_mobilenavbaritem_4',
        'mobilenavbaritem_5': 'startScreen_mobilenavbaritem_5',
        'mobilenavbaritem_7': 'startScreen_mobilenavbaritem_7'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fixing issue https://github.com/jquery/jquery-mobile/issues/5424 on Windows Phone
        $("div[data-role=page] div[data-role=footer]").css("bottom", "-36px");
    }

    if (Apperyio.getTargetPlatform == "I") {
        $.each(window.n2id, function(name, id) {
            var elApperyRole = $("#" + id).attr("data-role");
            if (elApperyRole != "appery_label" && elApperyRole != "appery_link") {
                var appleDataSelector = "#" + id + "[x-apple-data-detectors], #" + id + " [x-apple-data-detectors]";
                $(appleDataSelector).attr("x-apple-data-detectors", "false");
            }
        });
    }

    Apperyio.CurrentScreen = 'startScreen';

    /*
     * Nonvisual components
     */
    var datasources = [];

    /*
     * Appery.io Push-notification registration service
     */
    var _registerPushApperyDS = new Apperyio.DataSource(_pushRegistrationApperyService, {
        'onComplete': function(jqXHR, textStatus) {
            Apperyio.refreshScreenFormElements("startScreen");
        },
        'onSuccess': function(data) {
            console.info('App successfully registered with Appery.io Push service');
            $(document).trigger('pushregistrationsuccess');
        },
        'onError': function(jqXHR, textStatus, errorThrown) {
            $(document).trigger('pushregistrationfail');
        },
        'responseMapping': [],
        'requestMapping': [{
            'PATH': ['type'],
            'TRANSFORMATION': function(value) {
                return Apperyio.getTargetPlatform();
            }
        }, {
            'PATH': ['token'],
            'ID': '___local_storage___',
            'ATTR': 'pushNotificationToken'
        }, {
            'PATH': ['deviceID'],
            'ID': '___local_storage___',
            'ATTR': 'pushNotificationDeviceID'
        }, {
            'PATH': ['X-Appery-App-Id'],
            'HEADER': true,
            'TRANSFORMATION': function(value) {
                return Apperyio.getProjectGUID();
            }
        }, {
            'PATH': ['timeZone'],
            'ID': '___local_storage___',
            'ATTR': 'deviceTimeZone'
        }]
    });

    /*
     * Events and handlers
     */

    // Before Show
    startScreen_beforeshow = function() {
        Apperyio.CurrentScreen = "startScreen";
        for (var idx = 0; idx < datasources.length; idx++) {
            datasources[idx].__setupDisplay();
        }
    }

    // On Load
    screen_3671_onLoad = startScreen_onLoad = function() {
        screen_3671_elementsExtraJS();

        // TODO fire device events only if necessary (with JS logic)
        startScreen_deviceEvents();
        startScreen_windowEvents();
        screen_3671_elementsEvents();
    }

    // screen window events
    screen_3671_windowEvents = startScreen_windowEvents = function() {

        $('#startScreen').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });

    }

    // device events
    startScreen_deviceEvents = function() {

        document.addEventListener("deviceready", function() {

            $(document).bind("resume", function() {
                PushNotification.getPendingNotifications(function(status) {
                    var notifications = status.notifications;
                    for (var i = 0; i < notifications.length; ++i) {
                        PushNotification.notificationCallback(notifications[i]);
                    }
                });
            });
            $(document).bind("pushinit", function() {
                localStorage.setItem('pushNotificationToken', arguments[1].deviceToken);
                _registerPushApperyDS.execute({});
            });

            var pushNotification = PushNotification;
            pushNotification.getDeviceUniqueIdentifier(function(status) {
                localStorage.setItem('pushNotificationDeviceID', status);
            });

            var offset = new Date().getTimezoneOffset();
            var hr = parseInt(offset / (-60));
            var min = -offset - hr * 60;
            var tmin = '' + min;
            var timezone = 'UTC' + (hr > 0 ? '+' + hr : hr) + ':' + (tmin.length > 1 ? tmin : '0' + tmin);
            localStorage.setItem('deviceTimeZone', timezone);

            pushNotification.registerDevice({
                alert: true,
                badge: true,
                sound: true,
                senderid: ''
            }, function(status) {
                $(document).trigger('pushinit', status);
            });
        });
    }

    // screen elements extra js
    screen_3671_elementsExtraJS = startScreen_elementsExtraJS = function() {
        // screen (startScreen) extra code

    }

    // screen elements handler
    screen_3671_elementsEvents = startScreen_elementsEvents = function() {

        $("a :input,a a,a fieldset label").live({
            click: function(event) {
                event.stopPropagation();
            }
        });

    }

    $("#startScreen").die("pagebeforeshow").live("pagebeforeshow", function(event, ui) {
        startScreen_beforeshow();
    });

    if (runBeforeShow) {
        startScreen_beforeshow();
    } else {
        startScreen_onLoad();
    }

}

$("#startScreen").die("pageinit").live("pageinit", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    startScreen_js();
});

Waittimes_js = function(runBeforeShow) { /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'mobilenavbar_6': 'Waittimes_mobilenavbar_6',
        'mobilenavbaritem_8': 'Waittimes_mobilenavbaritem_8',
        'mobilenavbaritem_9': 'Waittimes_mobilenavbaritem_9'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fixing issue https://github.com/jquery/jquery-mobile/issues/5424 on Windows Phone
        $("div[data-role=page] div[data-role=footer]").css("bottom", "-36px");
    }

    if (Apperyio.getTargetPlatform == "I") {
        $.each(window.n2id, function(name, id) {
            var elApperyRole = $("#" + id).attr("data-role");
            if (elApperyRole != "appery_label" && elApperyRole != "appery_link") {
                var appleDataSelector = "#" + id + "[x-apple-data-detectors], #" + id + " [x-apple-data-detectors]";
                $(appleDataSelector).attr("x-apple-data-detectors", "false");
            }
        });
    }

    Apperyio.CurrentScreen = 'Waittimes';

    /*
     * Nonvisual components
     */
    var datasources = [];

    /*
     * Events and handlers
     */

    // Before Show
    Waittimes_beforeshow = function() {
        Apperyio.CurrentScreen = "Waittimes";
        for (var idx = 0; idx < datasources.length; idx++) {
            datasources[idx].__setupDisplay();
        }
    }

    // On Load
    screen_4B11_onLoad = Waittimes_onLoad = function() {
        screen_4B11_elementsExtraJS();

        // TODO fire device events only if necessary (with JS logic)
        Waittimes_deviceEvents();
        Waittimes_windowEvents();
        screen_4B11_elementsEvents();
    }

    // screen window events
    screen_4B11_windowEvents = Waittimes_windowEvents = function() {

        $('#Waittimes').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });

    }

    // device events
    Waittimes_deviceEvents = function() {

        document.addEventListener("deviceready", function() {

        });
    }

    // screen elements extra js
    screen_4B11_elementsExtraJS = Waittimes_elementsExtraJS = function() {
        // screen (Waittimes) extra code

    }

    // screen elements handler
    screen_4B11_elementsEvents = Waittimes_elementsEvents = function() {

        $("a :input,a a,a fieldset label").live({
            click: function(event) {
                event.stopPropagation();
            }
        });

    }

    $("#Waittimes").die("pagebeforeshow").live("pagebeforeshow", function(event, ui) {
        Waittimes_beforeshow();
    });

    if (runBeforeShow) {
        Waittimes_beforeshow();
    } else {
        Waittimes_onLoad();
    }

}

$("#Waittimes").die("pageinit").live("pageinit", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    Waittimes_js();
});